
DROP TABLE reviews;
DROP TABLE songs;
DROP TABLE album_artists;
DROP TABLE albums;
DROP TABLE artists;
DROP TABLE users;

CREATE TABLE users (
  username VARCHAR(50),
  user_id INTEGER(128),
  pass BLOB,
  email VARCHAR(50),
  phone VARCHAR(10),
  CONSTRAINT pk_user_id PRIMARY KEY (user_id)
);

CREATE TABLE artists (
  artist_name VARCHAR(100),
  artist_id INTEGER AUTO_INCREMENT,
  bio VARCHAR(256),
  CONSTRAINT pk_artist_id PRIMARY KEY (artist_id)
);

CREATE TABLE albums (
  album_title VARCHAR(100),
  date_released DATE,
  album_id INTEGER AUTO_INCREMENT,
  artist_id INTEGER,
  avg_rating DOUBLE(2,1),
  CONSTRAINT pk_album_id PRIMARY KEY (album_id),
  FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);

CREATE TABLE album_artists (
  artist_id INTEGER,
  album_id INTEGER,
  FOREIGN KEY (artist_id) REFERENCES artists(artist_id),
  FOREIGN KEY (album_id) REFERENCES albums(album_id),
  CONSTRAINT pk_artist_album_id PRIMARY KEY (artist_id, album_id)
);

CREATE TABLE songs (
  title VARCHAR(100),
  duration DOUBLE(5,2),
  artist VARCHAR(100),
  date_released DATE,
  album_id INTEGER(128),
  song_id INTEGER (128),
  avg_rating DOUBLE(2,1),
  CONSTRAINT pk_song_id PRIMARY KEY (song_id),
  FOREIGN KEY (album_id) REFERENCES albums(album_id)
);

CREATE TABLE reviews (
  song_id INTEGER(128),
  song_rating INTEGER(1),
  song_review VARCHAR(128),
  album_id INTEGER(128),
  album_rating INTEGER(1),
  album_review VARCHAR(128),
  date_of_review DATE,
  user_id INTEGER(128),
  FOREIGN KEY (song_id) REFERENCES songs(song_id),
  FOREIGN KEY (album_id) REFERENCES albums(album_id),
  FOREIGN KEY (user_id) REFERENCES users(user_id)
);

-- This is fake data generated by GPT-4
INSERT INTO users (username, user_id, pass, email, phone)
VALUES
  ('alice', 1, 'hashed_password1', 'alice@example.com', 1234567890),
  ('bob', 2, 'hashed_password2', 'bob@example.com', 9876543210),
  ('zara', 3, 'hashed_password50', 'zara@example.com', 555-123-4567);

INSERT INTO artists (artist_name, bio)
VALUES
  ('Adele', 'British singer-songwriter'),
  ('Bruno Mars', 'American singer, songwriter, and record producer'),
  ('Zayn Malik', 'English singer and songwriter'),
  ('Josh LaRue', 'Very cool person'),
  ('Caroline Polachek', 'Trained in opera and makes sick music');

INSERT INTO albums (album_title, date_released, artist_id, avg_rating)
VALUES
  ('25', '2015-11-20', 1, 4.5),
  ('Unorthodox Jukebox', '2012-12-07', 2, 4.2),
  ('Pang', '2023-12-29', 3, 4.9),
  ('Life In Britain', '2011-10-2', 4, 1.4),
  ('A Plethora of Goldfish', '2024-4-15', 5, 3.7);

INSERT INTO album_artists (artist_id, album_id)
VALUES
  (1, 1),
  (2, 2),
  (3, 3),
  (4, 4),
  (5, 5);

INSERT INTO songs (title, duration, artist, date_released, album_id, song_id, avg_rating)
VALUES
  ('Hello', 128, 'Adele', '2015-11-20', 1, 1, 4.7),
  ('Locked Out of Heaven', 380, 'Bruno Mars', '2012-12-07', 2, 2, 4.3),
  ('Pop Song', 240, 'Popular Band', '2023-10-26', 2, 3, 4.2),
  ('Rock Ballad', 300, 'Rock Star', '2024-02-14', 3, 4, 4.8),
  ('Snakes and Stones', 300, 'Rock Star', '2024-02-14', 3, 5, 4.8);

INSERT INTO reviews (song_id, song_rating, song_review, album_id, album_rating, album_review, date_of_review, user_id)
VALUES
  (1, 5, 'Amazing vocals!', 1, 4, 'Solid album overall', '2024-03-06', 1),
  (2, 4, 'Catchy tune!', 2, 4, 'Great mix of styles', '2024-03-06', 2);